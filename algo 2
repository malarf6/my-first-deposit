// Solution with arrays
ALGORITHM solution1 
VAR
    set1,set2 : ARRAY_OF INTEGER[20];
    i,j : INTEGER;
    sum : INTEGER :=  0;
    found : BOOLEAN;
BEGIN

    FOR i FROM 0 TO set1.length-1 DO
       
        FOR j FROM 0 TO set2.length-1 DO
            IF(set1[i] = set2[j]) THEN
                found := TRUE;
                BREAK;
            END_IF
        END_FOR
        IF ( found := FALSE) THEN
            sum := sum + set1[i];
        END_IF
    END_FOR

FOR i FROM 0 TO set2.length-1 STEP 1  DO
    FOR j FROM 0 TO set1.length-1 STEP 1  DO
    IF (set2[i]== set1[j]) THEN
        found   := TRUE ;
        BREAK;
    END_IF
    END_FOR
    IF( found := FALSE) THEN
      sum := sum + set2[i] 
END_FOR
    write("la somme  des elements distincts est : " +sum)
END


// Solution with Hash table
ALGORITHM DistinctElementsHtable
VAR
    set1,set2 : ARRAY_OF INTEGER[20];
    set_keys : ARRAY_OF INTEGER[40];
    dict := HASH_TABLE<INTEGER,INTEGER>;
    i, count : INTEGER;
    sum : INTEGER := 0;
BEGIN

    FOR i FROM 0 TO set1.length -1 STEP 1  DO
        IF (dict.lookup(set1[i]) = TRUE) THEN
            count := dict.get(set1[i]);
            dict.insert(set1[i],count+1);
        ELSE
            dict.insert(set1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1  DO
        IF (dict.lookup(set2[i]) = TRUE) THEN
            count := dict.get(set2[i]);
            dict.insert(set2[i],count+1);
        ELSE
            dict.insert(set2[i],1);
        END_IF
    END_FOR

    //get sum of overlapping elements
    set_keys := dict.getKeys();
    FOR i FROM 0 TO set_keys.length -1 STEP 1  DO
        IF (dict.get(set_keys[i]) = 2) THEN
            sum := sum +set_keys[i];
        END_IF
    END_FOR

END
